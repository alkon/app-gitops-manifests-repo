opentelemetry-collector:
  mode: deployment
  image:
    repository: "otel/opentelemetry-collector-contrib"
    tag: "0.128.0"

  config:
    receivers:
      otlp:
        protocols:
          grpc: {}  # OTLP gRPC (usually 4317)
          http: {}  # OTLP HTTP (usually 4318)

      hostmetrics:
        collection_interval: 5s
        scrapers:
          cpu:
          memory:
          disk:
          filesystem:
          network:
          load:

    processors:
      batch: {}

      metricsgeneration:
        # Converts spans to RED metrics
        rules:
          - name: http_server_duration_seconds
            unit: s
            instrument_type: histogram
            attributes:
              - http.method
              - http.status_code
              - service.name

          - name: http_requests_total
            unit: "1"
            instrument_type: counter
            monotonic: true
            value_extractor: "1"
            attributes:
              - http.method
              - http.status_code
              - service.name

    exporters:
      prometheus:
        endpoint: "0.0.0.0:8888"  # Exposes all metrics, including RED, for Prometheus/Thanos scraping

      prometheusremotewrite:
        endpoint: "http://thanos-receiver-receive.thanos-ns.svc.cluster.local:19291/api/v1/receive"
        tls:
          insecure_skip_verify: true
        resource_to_telemetry_conversion:
          enabled: true

      debug:
        verbosity: detailed

      otlp:
        endpoint: "tempo-app.monitoring.svc.cluster.local:4317"
        tls:
          insecure: true

    extensions:
      health_check:
        endpoint: "0.0.0.0:13133"
      pprof:
        endpoint: "0.0.0.0:1777"
      zpages:
        endpoint: "0.0.0.0:55679"

    service:
      telemetry:
        logs:
          level: debug
        metrics:
          address: "0.0.0.0:8888"  # Also for internal collector metrics (same port is OK)

      extensions:
        - health_check
        - pprof
        - zpages

      pipelines:

        metrics:
          receivers:
            - otlp
            - hostmetrics
          processors:
            - batch
          exporters:
            - prometheus
            - prometheusremotewrite
            - debug

        traces:
          receivers:
            - otlp
          processors:
            - metricsgeneration  # Converts spans to RED metrics
            - batch
          exporters:
            - prometheus         # RED metrics exposed to same endpoint
            - otlp               # Sends raw traces to Tempo
            - debug
